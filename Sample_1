
users = {}

@app.route('/users', methods=['POST'])
def create_user():
    data = request.get_json()
    username = data.get('username')
    password = data.get('password')
    active = data.get('active')

    if not username or not password or not isinstance(active, bool):
        return jsonify({'error': 'Invalid user data'}), 400

    if username in users:
        return jsonify({'error': 'User already exists'}), 400

    users[username] = {'username': username, 'password': password, 'active': active}
    return jsonify({'message': 'User created'}), 201


@app.route('/users/<username>', methods=['GET'])
def read_user(username):
    user = users.get(username)
    if not user:
        return jsonify({'error': 'User not found'}), 404
    return jsonify(user)


@app.route('/users/<username>', methods=['PUT'])
def update_user(username):
    data = request.get_json()
    user = users.get(username)
    if not user:
        return jsonify({'error': 'User not found'}), 404

    password = data.get('password')
    active = data.get('active')

    if password is not None:
        user['password'] = password
    if isinstance(active, bool):
        user['active'] = active

    return jsonify({'message': 'User updated'})


@app.route('/users/<username>', methods=['DELETE'])
def delete_user(username):
    if username not in users:
        return jsonify({'error': 'User not found'}), 404

    del users[username]
    return jsonify({'message': 'User deleted'})

if __name__ == '__main__':
    app.run(debug=True)
